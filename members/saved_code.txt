def __get_right_member(self, get_member, get_user_id):
      for i in get_member.values('user_id'):
          if i.get('user_id') is get_user_id:
              member_info = Members_table.objects.filter(user_id = i.get('user_id')).values()
      if not Goalkeeper_table.objects.filter(user_id = get_user_id):
          team_name = Personal_Info_table.objects.filter(has_username = get_user_id).values_list('team_name')
          get_team_name = team_name[0][0]
          get_players = None
      else:
          get_team_name = None
          boolean_credits = Members_table.objects.filter(user_id_id = get_user_id).values('boolean_team_points')
          get_credits_left = Members_table.objects.filter(user_id = get_user_id).values_list('credits_left', flat = True)
          get_gk = Goalkeeper_table.objects.filter(user_id_id = get_user_id).values_list('player_id_id', flat = True)
          get_def = Defender_table.objects.filter(user_id_id = get_user_id).values_list('player_id_id', flat = True)
          get_mid = Midfielder_table.objects.filter(user_id_id = get_user_id).values_list('player_id_id', flat = True)
          get_for = Striker_table.objects.filter(user_id_id = get_user_id).values_list('player_id_id', flat = True)
          get_gk_players = self.__get_squad(get_gk, boolean_credits, get_user_id, get_credits_left)
          get_def_players = self.__get_squad(get_def, boolean_credits, get_user_id, get_credits_left)
          get_mid_players = self.__get_squad(get_mid, boolean_credits, get_user_id, get_credits_left)
          get_for_players = self.__get_squad(get_for, boolean_credits, get_user_id, get_credits_left)
          get_players = [get_gk_players[0][0], get_def_players[0][0], get_mid_players[0][0], get_for_players[0][0]]
          self.__calc_points_left(boolean_credits[0]['boolean_team_points'], get_user_id)
      return member_info, get_team_name, get_players


      # context = {
          #     'username': request.user,
          #     'members': return_get_member[0],
          #     'team_name': return_get_member[1],
          #     'players': return_get_member[2],
          # }
